[{"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/index.js":"1","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/AuthProvider.js":"2","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/App.js":"3","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Direccionamiento.jsx":"4","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/partials/Footer.jsx":"5","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/partials/Header.jsx":"6","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/RequireAuth.js":"7","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Home.jsx":"8","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/PDF_EstadoR.jsx":"9","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Login.jsx":"10","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Dashboard.jsx":"11","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/PDF_BalanceG.jsx":"12","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Registro.jsx":"13","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/PDF_BalanceDeC.jsx":"14","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/useAuth.js":"15"},{"size":264,"mtime":1654978458197,"results":"16","hashOfConfig":"17"},{"size":342,"mtime":1654978458191,"results":"18","hashOfConfig":"17"},{"size":3279,"mtime":1655345940237,"results":"19","hashOfConfig":"17"},{"size":2055,"mtime":1655345194980,"results":"20","hashOfConfig":"17"},{"size":1694,"mtime":1655343974306,"results":"21","hashOfConfig":"17"},{"size":2721,"mtime":1655348680505,"results":"22","hashOfConfig":"17"},{"size":365,"mtime":1654978458196,"results":"23","hashOfConfig":"17"},{"size":185,"mtime":1653067025577,"results":"24","hashOfConfig":"17"},{"size":22985,"mtime":1655327489662,"results":"25","hashOfConfig":"17"},{"size":4924,"mtime":1655345575845,"results":"26","hashOfConfig":"17"},{"size":9134,"mtime":1655323057427,"results":"27","hashOfConfig":"17"},{"size":22081,"mtime":1655326555520,"results":"28","hashOfConfig":"17"},{"size":4940,"mtime":1655327843646,"results":"29","hashOfConfig":"17"},{"size":31942,"mtime":1655328372753,"results":"30","hashOfConfig":"17"},{"size":165,"mtime":1654978458196,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wowb8z",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":2,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/index.js",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/AuthProvider.js",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/App.js",["84","85"],[],"import { React, useEffect, useState } from \"react\";\n// react router dom\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Direccionamiento from \"./Direccionamiento\";\nimport Header from \"./partials/Header\";\nimport Footer from \"./partials/Footer\";\n\n\nfunction App(){\n    document.title = \"Eafy Heroku\"\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [userContraseña, setUserContraseña] = useState(\"\");\n\n    \n    useEffect(() => {\n        console.log(\"BUSCANDO DATOS\");\n        if (window.localStorage.getItem(\"userEmail\") && window.localStorage.getItem(\"userContraseña\")) {\n            console.log(\"VALOR ENCONTRADO EMAIL\");\n            const emailData = window.localStorage.getItem(\"userEmail\");\n            console.log(emailData);\n            setUserEmail(JSON.parse(emailData));\n            console.log(\"VALOR ENCONTRADO CONTRASEÑA\");\n            const contraseñaData = window.localStorage.getItem(\"userContraseña\");\n            console.log(contraseñaData);\n            setUserContraseña(JSON.parse(contraseñaData));\n            console.log(\"imprimeindo loggedin\", loggedIn);\n        } else {\n            setUserEmail(null);\n            setUserContraseña(null);\n            console.log(\"imprimeindo loggedin\", loggedIn);\n        }\n    }, []);\n    \n    useEffect(() => {\n        console.log(\"imprimiendo info de usuario\", userEmail,\" : \", userContraseña);\n        if (userEmail && userContraseña) {\n            window.localStorage.setItem('userEmail', JSON.stringify(userEmail));\n            window.localStorage.setItem('userContraseña', JSON.stringify(userContraseña));\n        } else {\n            /*\n            const emailData = window.localStorage.getItem(\"userEmail\");\n            console.log(emailData);\n            setUserEmail(JSON.parse(emailData));\n\n            const contraseñaData = window.localStorage.getItem(\"userContraseña\");\n            console.log(contraseñaData);\n            setUserContraseña(JSON.parse(contraseñaData));\n            */\n        }\n    }, [userEmail, userContraseña]);\n\n    useEffect(() => {\n        setLoggedIn(JSON.parse(window.localStorage.getItem('loggedIn')));\n        console.log(\"imprimiendo loggedIn\", loggedIn);\n    }, []);\n    \n    useEffect(() => {\n        window.localStorage.setItem('loggedIn', loggedIn);\n        console.log(\"imprimendo loggedIn\", loggedIn)\n    }, [loggedIn]);\n\n    const logOut = () => {\n        setLoggedIn(false);\n        setUserEmail(\"\");\n        setUserContraseña(\"\");\n        window.localStorage.setItem('userEmail', \"\");\n        window.localStorage.setItem('userContraseña', \"\");\n    }\n      \n\n    return (\n        <Router>\n            <div>\n                <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} logOut={logOut}/>\n                    <Direccionamiento loggedIn={loggedIn} setLoggedIn={setLoggedIn}\n                                        userEmail={userEmail} setUserEmail={setUserEmail}\n                                        userContraseña={userContraseña} setUserContraseña={setUserContraseña}\n                                        />\n                <Footer loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Direccionamiento.jsx",["86","87","88","89","90","91"],[],"import { React, useEffect, useState } from \"react\";\n// react router dom\nimport { Routes, Route } from \"react-router-dom\";\n// paginas\nimport Home from \"./Paginas/Home\";\nimport Registro from \"./Paginas/Registro\";\nimport Dashboard from \"./Paginas/Dashboard\";\nimport Login from \"./Paginas/Login\";\nimport PDF_BalanceG from \"./Paginas/PDF_BalanceG\";\nimport PDF_EstadoR from \"./Paginas/PDF_EstadoR\";\nimport PDF_BalanceDeC from \"./Paginas/PDF_BalanceDeC\";\nimport RequireAuth from \"./RequireAuth\";\n//import { set } from \"../../../backend/models/catalogo_Schema\";\n\nfunction Direccionamiento({loggedIn, setLoggedIn, userEmail, setUserEmail, userContraseña, setUserContraseña}){\n\n    return (\n        <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/descargarPDF_BG\" element={<PDF_BalanceG   userEmail={userEmail} \n                                                                    userContraseña={userContraseña}/>} />\n            <Route path=\"/descargarPDF_ER\" element={<PDF_EstadoR    userEmail={userEmail} \n                                                                    userContraseña={userContraseña}/>} />\n            <Route path=\"/descargarPDF_BC\" element={<PDF_BalanceDeC userEmail={userEmail} \n                                                                    userContraseña={userContraseña}/>} />\n            <Route class={loggedIn? 'hidden' : undefined} path=\"/login\" element={<Login setUserEmail={setUserEmail} setUserContraseña={setUserContraseña} setLoggedIn={setLoggedIn}/>} />\n            <Route class={loggedIn? 'hidden' : undefined} path=\"/registro\" element={<Registro setUserEmail={setUserEmail} setUserContraseña={setUserContraseña} />} />\n            <Route path=\"/dashboard\" element={<Dashboard userEmail={userEmail} userContraseña={userContraseña} />} />\n            {/*\n            <Route element={<RequireAuth />}>\n                <Route path=\"/dashboard\" element={<Dashboard />} />\n            </Route>\n            */}\n        </Routes>\n    );   \n}\n\n\nexport default Direccionamiento;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/partials/Footer.jsx",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/partials/Header.jsx",["92","93","94"],[],"import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nfunction Header({loggedIn, setLoggedIn, logOut}) {\n    return (\n        <header>\n            {/*\n            <ul className=\"nav nav-tabs mb-3 \" id=\"myTab\" role=\"tablist\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" nav-link-color=\"primary\" id=\"home-tab\" data-toggle=\"tab\" href=\"/\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Home</a>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" class=\"nav-link\" aria-current=\"page\">Login</Link>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"registro-tab\" data-toggle=\"tab\" href=\"/registro\" role=\"tab\" aria-controls=\"registro\" aria-selected=\"false\">Registro</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"dashboard-tab\" data-toggle=\"tab\" href=\"/dashboard\" role=\"tab\" aria-controls=\"dashboard\" aria-selected=\"false\">Dashboard</a>\n                </li>\n            </ul>\n            <div class=\"tab-content\">\n                <div class=\"tab-pane fade show active\" id=\"\" role=\"tabpanel\" aria-labelledby=\"home-tab\"></div>\n                <div class=\"tab-pane fade show active\" id=\"registro\" role=\"tabpanel\" aria-labelledby=\"registro-tab\"></div>\n                <div class=\"tab-pane fade show active\" id=\"dashboard\" role=\"tabpanel\" aria-labelledby=\"dashboard-tab\"></div>\n            </div>*/}\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div class=\"container-fluid\">\n                    <a href=\"#\" class=\"navbar-brand\">EafySolutions</a>\n                    <button type=\"button\" class=\"navbar-toggler\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                        <div class=\"navbar-nav\">\n                            <a href=\"/\" class=\"nav-item nav-link active\">Inicio</a>\n                            <a href=\"/registro\" class=\"nav-item nav-link\">Registro</a>\n                            <a href=\"/login\" class=\"nav-item nav-link\">Login</a>\n                            <a href=\"/dashboard\" class=\"nav-item nav-link\">Dashboard</a>\n                        </div>\n                        <button className={!loggedIn? 'hidden' : undefined} onClick={() => logOut()}>\n                            Log Out\n                        </button>\n                    </div>\n\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/RequireAuth.js",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Home.jsx",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/PDF_EstadoR.jsx",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Helmet } from 'react-helmet';\nimport Select from 'react-select';\nimport swal from 'sweetalert';\nimport Pdf from \"react-to-pdf\";\n\nconst reference2 = React.createRef();\n\nconst Swal = require('sweetalert2');\n\nfunction DescargarPDF_ER( {userEmail, userContraseña} ){\n\n    //Estado ER\n    const [cuentasER, setCuentasER] = useState({});\n\n    var Mes_Rep1 = \"ene\";\n    var Mes_Rep2 = \"dic\";\n\n    const meses = [\n        { label: 'Enero',       value: 'ene' },\n        { label: 'Febrero',     value: 'feb'},\n        { label: 'Marzo',       value: 'mar' },\n        { label: 'Abril',       value: 'abr' },\n        { label: 'Mayo',        value: 'may ' },\n        { label: 'Junio',       value: 'jun' },\n        { label: 'Julio',       value: 'jul' },\n        { label: 'Agosto',      value: 'ago' },\n        { label: 'Septiembre',  value: 'sep'},\n        { label: 'Octubre',     value: 'oct' },\n        { label: 'Noviembre',   value: 'nov'},\n        { label: 'Diciembre',   value: 'dic'}\n    ]\n\n    const handleSelect_Mes_Rep1 = (event) => {\n        Mes_Rep1 = event.value;\n        console.log(Mes_Rep1);\n    }\n\n    const handleSelect_Mes_Rep2 = (event) => {\n        Mes_Rep2 = event.value;\n        console.log(Mes_Rep2);\n    }\n\n    const generarReporteER = () => {\n        var ingresosTotal = [0, 0];\n        var egresosTotal = [0, 0];\n        var ingresos = [];\n        var egresos = [];\n        var egresosSub = {};\n        var asignacion = {};\n        var diccionarioCN = {};\n\n        console.log(\"ruta: \", `/recibir_FechasDe_Movimientos/${Mes_Rep1}/${Mes_Rep2}/${userEmail}/${userContraseña}`);\n\n        axios.all([\n            axios.get(`/recibirCuentas/${userEmail}/${userContraseña}`), \n            axios.get(`/recibir_FechasDe_Movimientos/${Mes_Rep1}/${Mes_Rep2}/${userEmail}/${userContraseña}`)\n        ])\n        .then(axios.spread((resp1, resp2) => {\n            var catalogoCuentas = resp1.data;\n            var movimientos = resp2.data;\n            var pendientes = [];\n            \n            console.log(\"Comenzamos\");\n            console.log(catalogoCuentas);\n            console.log(movimientos);\n            //Revisar el catálogo y ver cuentas que estarán en el reporte ER\n            for (let i = 0; i < catalogoCuentas.length; i++) {\n                setCuentasER(cuentasER[catalogoCuentas[i][\"Codigo\"]] = [0, 0]);\n                if (parseInt(catalogoCuentas[i][\"Codigo\"].substring(0,3)) >= 400 && parseInt(catalogoCuentas[i][\"Codigo\"].substring(0,3)) < 500) {\n                    ingresos.push(catalogoCuentas[i][\"Codigo\"]);\n                    diccionarioCN[catalogoCuentas[i][\"Codigo\"]] = catalogoCuentas[i][\"Nombre\"];\n                    diccionarioCN[catalogoCuentas[i][\"Nombre\"]] = catalogoCuentas[i][\"Codigo\"];\n                } else if (parseInt(catalogoCuentas[i][\"Codigo\"].substring(0,3)) > 500 && catalogoCuentas[i][\"Codigo\"].substring(4,8) == \"0000\") {\n                    egresos.push(catalogoCuentas[i][\"Codigo\"]);\n                    asignacion[catalogoCuentas[i][\"Codigo\"].substring(0,3)] = catalogoCuentas[i][\"Codigo\"];\n                    egresosSub[asignacion[catalogoCuentas[i][\"Codigo\"].substring(0,3)]] = [];\n                    diccionarioCN[catalogoCuentas[i][\"Codigo\"]] = catalogoCuentas[i][\"Nombre\"];\n                    diccionarioCN[catalogoCuentas[i][\"Nombre\"]] = catalogoCuentas[i][\"Codigo\"];\n                } else if (parseInt(catalogoCuentas[i][\"Codigo\"].substring(0,3)) > 500) {\n                    if (asignacion[catalogoCuentas[i][\"Codigo\"].substring(0,3)] == null) {\n                        pendientes.push(catalogoCuentas[i]);\n                    } else {\n                        egresosSub[asignacion[catalogoCuentas[i][\"Codigo\"].substring(0,3)]].push(catalogoCuentas[i][\"Codigo\"]);\n                        diccionarioCN[catalogoCuentas[i][\"Codigo\"]] = catalogoCuentas[i][\"Nombre\"];\n                        diccionarioCN[catalogoCuentas[i][\"Nombre\"]] = catalogoCuentas[i][\"Codigo\"];\n                    }\n                }\n            }\n\n            //Revisar casos donde todavía no estaba la categoria en asignación\n            for (let i = 0; i < pendientes.length; i++) {\n                if (asignacion[pendientes[i][\"Codigo\"].substring(0,3)] != null) {\n                    egresosSub[asignacion[pendientes[i][\"Codigo\"].substring(0,3)]].push(pendientes[i][\"Codigo\"]);\n                    diccionarioCN[catalogoCuentas[i][\"Codigo\"]] = catalogoCuentas[i][\"Nombre\"];\n                    diccionarioCN[catalogoCuentas[i][\"Nombre\"]] = catalogoCuentas[i][\"Codigo\"];\n                }\n            }\n            console.log(\"A ver las cuentas\");\n            console.log(pendientes);\n            console.log(cuentasER);\n\n            //Analizar movimientos para conseguir los totales de las subcategorías \n            for (let i = 0; i < movimientos.length; i++) {\n                if (((movimientos[i][\"Categoria_Total\"] != null && movimientos[i][\"Categoria_Total\"] != \"Movimiento de Cuenta Común\" \n                && (parseInt(movimientos[i][\"Cuenta\"].substring(0,3)) >= 400)\n                && (movimientos[i][\"Total_Cargos\"] || movimientos[i][\"Total_Abonos\"] || movimientos[i][\"Total_Saldo\"])))) {\n                    let codigo = \"\";\n                    if (movimientos[i][\"Cuenta\"] != diccionarioCN[movimientos[i][\"Categoria_Total\"]] && diccionarioCN[movimientos[i][\"Categoria_Total\"]] != null) {\n                        codigo = diccionarioCN[movimientos[i][\"Categoria_Total\"]];\n                    } else if (diccionarioCN[movimientos[i][\"Categoria_Total\"]] == null) {\n                        codigo = movimientos[i][\"Cuenta\"];\n                        diccionarioCN[movimientos[i][\"Categoria_Total\"]] = codigo;\n                        diccionarioCN[codigo] = movimientos[i][\"Categoria_Total\"];\n                    } else {\n                        codigo = movimientos[i][\"Cuenta\"];\n                    }\n\n                    console.log(\"Codigo decidido:\", codigo);\n                    if (movimientos[i][\"Total_Cargos\"] > 0 && movimientos[i][\"Total_Abonos\"] == 0) {\n                        var currObj = cuentasER[codigo];\n                        currObj[0] += movimientos[i][\"Total_Cargos\"];\n                        currObj[1] += movimientos[i][\"Total_Saldo\"];\n                        setCuentasER(cuentasER[codigo] = currObj);\n                    } else{\n                        var currObj = cuentasER[codigo];\n                        currObj[0] += movimientos[i][\"Total_Abonos\"];\n                        currObj[1] += movimientos[i][\"Total_Saldo\"];\n                        setCuentasER(cuentasER[codigo] = currObj);\n                    }\n                }\n            }\n            //Calcular el total de ingresos\n            for (let i = 0; i<ingresos.length; i++) {\n                if (cuentasER[ingresos[i]] != null) {\n                    ingresosTotal[0] += cuentasER[ingresos[i]][0];\n                    ingresosTotal[1] += cuentasER[ingresos[i]][1];\n                }\n            }\n            console.log(\"Calculando total de ingresos\");\n            //Calcular el total de cada categoría de egresos\n            for (let i = 0; i<egresos.length; i++) {\n                var currTotal = [0,0];\n                console.log(\"Vamos con la categoria: \", diccionarioCN[egresos[i]]);\n                console.log(cuentasER[egresos[i]]);\n                if (cuentasER[egresos[i]][0] == 0 && cuentasER[egresos[i]][1] == 0) {\n                    for (let j = 0; j<egresosSub[egresos[i]].length; j++) {\n                        console.log(\"Vamos con la subcategoria: \", diccionarioCN[egresosSub[egresos[i]]]);\n                        if(cuentasER[egresosSub[egresos[i]][j]] != null) {\n                            currTotal[0] += cuentasER[egresosSub[egresos[i]][j]][0];\n                            currTotal[1] += cuentasER[egresosSub[egresos[i]][j]][1];\n                        }\n                    }\n                    egresosTotal[0] += currTotal[0];\n                    egresosTotal[1] += currTotal[1];\n                    setCuentasER(cuentasER[egresos[i]] = currTotal);\n                } else {\n                    egresosTotal[0] += cuentasER[egresos[i]][0];\n                    egresosTotal[1] += cuentasER[egresos[i]][1];\n                }\n            }\n            console.log(diccionarioCN);\n            console.log(ingresos);\n            console.log(egresos);\n            console.log(egresosSub);\n            console.log(ingresosTotal);\n            console.log(egresosTotal);\n            console.log(cuentasER);\n            //Añadir contenido HTML a la página: \n\n            //Añadir titulo de ingresos: \n            var ERTable = document.getElementById(\"tablaER\");\n            var row = ERTable.insertRow(ERTable.rows.length);\n            var cell0 = row.insertCell(0);\n            var element = document.createElement(\"strong\");\n            element.innerHTML = \"Ingresos\";\n            cell0.appendChild(element);\n\n            //Agregar subcategorías de ingresos:\n            for (let i = 0; i < ingresos.length; i++) {\n                if (cuentasER[ingresos[i]] != null && (cuentasER[ingresos[i]][0] != 0 || cuentasER[ingresos[i]][1] != 0)) {\n                    var Irow = ERTable.insertRow(ERTable.rows.length);\n                    var ICell0 = Irow.insertCell(0);\n                    var Ielement = document.createElement(\"p\");\n                    Ielement.innerHTML = diccionarioCN[ingresos[i]];\n                    ICell0.appendChild(Ielement);\n\n                    var ICell1 = Irow.insertCell(1);\n                    Ielement = document.createElement(\"p\");\n                    Ielement.innerHTML = (cuentasER[ingresos[i]][0]).toFixed(2);\n                    ICell1.appendChild(Ielement);\n\n                    var ICell2 = Irow.insertCell(2);\n                    Ielement = document.createElement(\"p\");\n                    Ielement.innerHTML = ((cuentasER[ingresos[i]][0] / ingresosTotal[0]) * 100).toFixed(2);\n                    ICell2.appendChild(Ielement);\n\n                    var ICell3 = Irow.insertCell(3);\n                    Ielement = document.createElement(\"p\");\n                    Ielement.innerHTML = (cuentasER[ingresos[i]][1]).toFixed(2);\n                    ICell3.appendChild(Ielement);\n\n                    var ICell4 = Irow.insertCell(4);\n                    Ielement = document.createElement(\"p\");\n                    Ielement.innerHTML = ((cuentasER[ingresos[i]][1] / ingresosTotal[1]) * 100).toFixed(2)\n                    ICell4.appendChild(Ielement);\n                }\n            }\n            \n            //Agregar total de ingresos\n            var TIrow = ERTable.insertRow(ERTable.rows.length);\n            var TIcell0 = TIrow.insertCell(0);\n            var TIelement = document.createElement(\"strong\");\n            TIelement.innerHTML = \"Total Ingresos\";\n            TIcell0.appendChild(TIelement);\n\n            var TIcell1 = TIrow.insertCell(1);\n            TIelement = document.createElement(\"p\");\n            TIelement.innerHTML = (ingresosTotal[0]).toFixed(2);\n            TIcell1.appendChild(TIelement);\n\n            var TIcell2 = TIrow.insertCell(2);\n            TIelement = document.createElement(\"p\");\n            TIelement.innerHTML = ((ingresosTotal[0] / ingresosTotal[0]) * 100).toFixed(2);\n            TIcell2.appendChild(TIelement);\n\n            var TIcell3 = TIrow.insertCell(3);\n            TIelement = document.createElement(\"p\");\n            TIelement.innerHTML = (ingresosTotal[1]).toFixed(2);\n            TIcell3.appendChild(TIelement);\n\n            var TIcell4 = TIrow.insertCell(4);\n            TIelement = document.createElement(\"p\");\n            TIelement.innerHTML = ((ingresosTotal[1] / ingresosTotal[1]) * 100).toFixed(2)\n            TIcell4.appendChild(TIelement);\n\n            //Agregar titulo de egresos\n            row = ERTable.insertRow(ERTable.rows.length);\n            cell0 = row.insertCell(0);\n            element = document.createElement(\"strong\");\n            element.innerHTML = \"Egresos\";\n            cell0.appendChild(element);\n\n            //Agregar cada categoria de egresos\n            egresos.sort();\n            for (let i = 0; i < egresos.length; i++) {\n                if (cuentasER[egresos[i]]  && (cuentasER[egresos[i]][0] != 0 || cuentasER[egresos[i]][0] != 0)) {\n                    //Agregar título de categoría\n                    var Erow = ERTable.insertRow(ERTable.rows.length);\n                    var Ecell0 = Erow.insertCell(0);\n                    var Eelement = document.createElement(\"p\");\n                    Eelement.innerHTML = diccionarioCN[egresos[i]];\n                    Ecell0.appendChild(Eelement);\n\n                    //Agregar cada subcategoría\n                    egresosSub[egresos[i]].sort();\n                    for (let j = 0; j<egresosSub[egresos[i]].length;j++) {\n                        if (cuentasER[egresosSub[egresos[i]][j]] != null && (cuentasER[egresosSub[egresos[i]][j]][0] != 0 || cuentasER[egresosSub[egresos[i]][j]][1] != 0)) {\n                            var SErow = ERTable.insertRow(ERTable.rows.length);\n\n                            var SEcell0 = SErow.insertCell(0);\n                            var SEelement = document.createElement(\"p\");\n                            SEelement.innerHTML = diccionarioCN[egresosSub[egresos[i]][j]];\n                            SEcell0.appendChild(SEelement);\n\n                            var SEcell1 = SErow.insertCell(1);\n                            SEelement = document.createElement(\"p\");\n                            SEelement.innerHTML = (cuentasER[egresosSub[egresos[i]][j]][0]).toFixed(2);\n                            SEcell1.appendChild(SEelement);\n\n                            var SEcell2 = SErow.insertCell(2);\n                            SEelement = document.createElement(\"p\");\n                            SEelement.innerHTML = ((cuentasER[egresosSub[egresos[i]][j]][0] / ingresosTotal[0]) * 100).toFixed(2);\n                            SEcell2.appendChild(SEelement);\n\n                            var SEcell3 = SErow.insertCell(3);\n                            SEelement = document.createElement(\"p\");\n                            SEelement.innerHTML = (cuentasER[egresosSub[egresos[i]][j]][1]).toFixed(2);\n                            SEcell3.appendChild(SEelement);\n\n                            var SEcell4 = SErow.insertCell(4);\n                            SEelement = document.createElement(\"p\");\n                            SEelement.innerHTML = ((cuentasER[egresosSub[egresos[i]][j]][1] / ingresosTotal[1]) * 100).toFixed(2);\n                            SEcell4.appendChild(SEelement);\n                        }\n                    }\n                    //Agregar total de la categoría\n                    Erow = ERTable.insertRow(ERTable.rows.length);\n\n                    Ecell0 = Erow.insertCell(0);\n                    Eelement = document.createElement(\"p\");\n                    Eelement.innerHTML = \"Total \".concat(diccionarioCN[egresos[i]]);\n                    Ecell0.appendChild(Eelement);\n\n                    var Ecell1 = Erow.insertCell(1);\n                    Eelement = document.createElement(\"p\");\n                    Eelement.innerHTML = (cuentasER[egresos[i]][0]).toFixed(2);\n                    Ecell1.appendChild(Eelement);\n\n                    var Ecell2 = Erow.insertCell(2);\n                    Eelement = document.createElement(\"p\");\n                    Eelement.innerHTML = ((cuentasER[egresos[i]][0] / ingresosTotal[0]) * 100).toFixed(2);\n                    Ecell2.appendChild(Eelement);\n\n                    var Ecell3 = Erow.insertCell(3);\n                    Eelement = document.createElement(\"p\");\n                    Eelement.innerHTML = (cuentasER[egresos[i]][1]).toFixed(2);\n                    Ecell3.appendChild(Eelement);\n\n                    var Ecell4 = Erow.insertCell(4);\n                    Eelement = document.createElement(\"p\");\n                    Eelement.innerHTML = ((cuentasER[egresos[i]][1] / ingresosTotal[1]) * 100).toFixed(2);\n                    Ecell4.appendChild(Eelement);\n                }\n            }\n\n            //Agregar total de egresos\n            var TErow = ERTable.insertRow(ERTable.rows.length);\n            var TEcell0 = TErow.insertCell(0);\n            var TEelement = document.createElement(\"strong\");\n            TEelement.innerHTML = \"Total Egresos\";\n            TEcell0.appendChild(TEelement);\n\n            var TEcell1 = TErow.insertCell(1);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = (egresosTotal[0]).toFixed(2);\n            TEcell1.appendChild(TEelement);\n\n            var TEcell2 = TErow.insertCell(2);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = ((egresosTotal[0] / ingresosTotal[0]) * 100).toFixed(2);\n            TEcell2.appendChild(TEelement);\n\n            var TEcell3 = TErow.insertCell(3);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = (egresosTotal[1]).toFixed(2);\n            TEcell3.appendChild(TEelement);\n\n            var TEcell4 = TErow.insertCell(4);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = ((egresosTotal[1] / ingresosTotal[1]) * 100).toFixed(2)\n            TEcell4.appendChild(TEelement);\n\n            //Agregar utilidad\n            var TErow = ERTable.insertRow(ERTable.rows.length);\n            var TEcell0 = TErow.insertCell(0);\n            var TEelement = document.createElement(\"strong\");\n            TEelement.innerHTML = \"Utilidad (o Pérdida)\";\n            TEcell0.appendChild(TEelement);\n\n            var TEcell1 = TErow.insertCell(1);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = (ingresosTotal[0] - egresosTotal[0]).toFixed(2);\n            TEcell1.appendChild(TEelement);\n\n            var TEcell2 = TErow.insertCell(2);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = (((ingresosTotal[0] - egresosTotal[0]) / ingresosTotal[0]) * 100).toFixed(2);\n            TEcell2.appendChild(TEelement);\n\n            var TEcell3 = TErow.insertCell(3);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = (ingresosTotal[0] - egresosTotal[1]).toFixed(2);\n            TEcell3.appendChild(TEelement);\n\n            var TEcell4 = TErow.insertCell(4);\n            TEelement = document.createElement(\"p\");\n            TEelement.innerHTML = (((ingresosTotal[1] - egresosTotal[1]) / ingresosTotal[1]) * 100).toFixed(2)\n            TEcell4.appendChild(TEelement);\n        }));\n\n\n    }; \n\n    const options = {\n        orientation: 'portrait',\n        unit: 'in',\n        format: [40,13]\n    };\n\n    return(\n        <div className=\"container micontenedor\">\n            <Helmet>\n                <title>Descargar Estado de Resultados</title>\n            </Helmet>\n            <h1>Tu Estado de Resultados </h1>\n                <div className=\"col-md-auto align-items-center text-center\">\n                    <h5>¿No es correcto? Pulsa \"Actualizar Estado de Resultados\"</h5>\n                </div>\n                    {/* generarReporteER() */}\n                    <h4>Mes Inicial: </h4>\n                    <div className=\"col-md-auto\">\n                        <Select name=\"mes1\" required \n                            options = {meses}\n                            onChange = {handleSelect_Mes_Rep1}\n                        />\n                            \n                    </div>\n                    <h4>Mes Final: </h4>\n                    <div className=\"col-md-auto\">\n                        <Select name=\"mes2\" required \n                            options = {meses}\n                            onChange = {handleSelect_Mes_Rep2}\n                        />\n                            \n                    </div>\n        \n                    {/*Boton Estado de Resultados*/}\n                    <div className=\"col-md-auto align-items-center text-center\">\n                                <a href=\"#myModal1\" className=\"btn btn-primary btn-lg btn-costum-size\" role=\"button\" onClick={() => generarReporteER()}>Actualizar Estado de Resultados</a>\n                                \n                                {/*\n                                Modalidad Estado de resultados generada al presionar el boton\n                                */}\n    \n                                <div id=\"myModal1\" ref={reference2} >\n                                    \n                                        <div className=\"modal-dialog modal-xl\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Estado de Resultados</h5>\n                                                    \n                                                    <Pdf targetRef={reference2} filename=\"Estado de Resultados.pdf\">\n                                                        {({ toPdf }) => <button className=\"btn btn-primary\" onClick={toPdf}>Descargar PDF \"Estado de Resultados\"</button>}\n                                                    </Pdf>\n                                                \n                                                </div>\n                                                <div className=\"modal-body\">\n                                                    <section className =\"flex-container\">\n                                                        <table id=\"tablaER\" className=\"table-responsive table-borderless\">\n                                                            <thead>\n                                                                <th scope=\"col\"></th>\n                                                                <th className=\"tituloCentro\" scope=\"col\">Periodo</th>\n                                                                <th className=\"tituloCentro\" scope=\"col\">%</th>\n                                                                <th className=\"tituloCentro\" scope=\"col\">Acomulado</th>\n                                                                <th className=\"tituloCentro\" scope=\"col\">%</th>\n                                                            </thead>\n                                                            <tbody>\n\n                                                            </tbody>\n                                                        </table>\n                                                    </section>\n                                                </div>\n                                               \n                                            </div>\n                                        </div>  \n                                     \n                                </div>\n                            </div>\n        </div>\n    );\n}\n\nexport default DescargarPDF_ER;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Login.jsx",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Dashboard.jsx",["119","120","121","122","123","124","125","126","127","128","129","130","131"],[],"import React, { useEffect, useState } from \"react\";\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport swal from 'sweetalert';\n\nconst Swal = require('sweetalert2');\n\nfunction Dashboard( {userEmail, userContraseña} ){\n\n    var Mes_Rep1 = \"ene\";\n    var Mes_Rep2 = \"dic\";\n\n    var prev_result = null;\n    var result = null;\n    var valid = false;\n\n    function mostrarAlerta() {\n        // Obtener nombre de archivo\n        let archivo = document.getElementById('excel-file').value,\n        // Obtener extensión del archivo\n            extension = archivo.substring(archivo.lastIndexOf('.'),archivo.length);\n        // Si la extensión obtenida no está incluida en la lista de valores\n        // del atributo \"accept\", mostrar un error.\n        if(document.getElementById('excel-file').getAttribute('accept').split(',').indexOf(extension) < 0) {\n            swal(\"Archivo inválido\", \"No se permite la extensión \" + extension);\n        }\n        else {\n            valid = true;\n        }\n    }\n\n    function mostrarAlertaCat() {\n        // Obtener nombre de archivo\n        let archivo = document.getElementById('excel-file-Cat').value,\n        // Obtener extensión del archivo\n            extension = archivo.substring(archivo.lastIndexOf('.'),archivo.length);\n        // Si la extensión obtenida no está incluida en la lista de valores\n        // del atributo \"accept\", mostrar un error.\n        if(document.getElementById('excel-file-Cat').getAttribute('accept').split(',').indexOf(extension) < 0) {\n            swal(\"Archivo inválido\", \"No se permite la extensión \" + extension);\n        }\n        else {\n            valid = true;\n        }\n    }\n\n    function alertaPOST() {\n        if (valid == true) {\n            swal(\"Ya casi\", \"A continuación tus datos se mandaran a la DB\");\n            valid = false;\n        } else {\n            swal(\"Ingresa un archivo Excel(.xlsx)\")\n        }\n    }\n    \n    {/*\n    async function validateMov(){\n        const result = await axios.get(\"/validateMovimientosTEST\");\n        const status = result.status\n        console.log(\"Pase por validateMov\");\n        console.log(status);\n\n        if (status===200){\n            Swal.fire(\n                'Tu información se ha mandado a la DB :)',\n                'success'\n            )\n            \n        }\n        else {\n            Swal.fire({\n                icon: 'error',\n                title: 'ERROR:',\n                text: 'Los datos no se enviaron :('\n            })\n        }\n    }\n    */}\n\n    function handleClick(event){\n        // evita el parpadeo predefinido\n        event.preventDefault();\n        const excelMov = document.getElementById(\"excel-file\").files;\n        console.log(excelMov);\n        \n    }\n\n    let formData = new FormData();\n    \n    const onFileChange = async (e) => {\n        console.log(e.target.files[0])\n        console.log(document.querySelector('#excel-file').files[0])\n        if (e.target && e.target.files[0]);\n        formData.append('excel', e.target.files[0]);\n        mostrarAlerta();\n    } \n\n    const onFileChange_Cat = async (e) => {\n        console.log(e.target.files[0])\n        console.log(document.querySelector('#excel-file-Cat').files[0])\n        if (e.target && e.target.files[0]);\n        formData.append('excel', e.target.files[0]);\n        mostrarAlertaCat();\n    } \n\n    const meses = [\n        { label: 'Enero',       value: 'ene' },\n        { label: 'Febrero',     value: 'feb'},\n        { label: 'Marzo',       value: 'mar' },\n        { label: 'Abril',       value: 'abr' },\n        { label: 'Mayo',        value: 'may ' },\n        { label: 'Junio',       value: 'jun' },\n        { label: 'Julio',       value: 'jul' },\n        { label: 'Agosto',      value: 'ago' },\n        { label: 'Septiembre',  value: 'sep'},\n        { label: 'Octubre',     value: 'oct' },\n        { label: 'Noviembre',   value: 'nov'},\n        { label: 'Diciembre',   value: 'dic'}\n    ]\n\n    const handleSelect_Mes_Rep1 = (event) => {\n        Mes_Rep1 = event.value;\n        console.log(Mes_Rep1);\n    }\n\n    const handleSelect_Mes_Rep2 = (event) => {\n        Mes_Rep2 = event.value;\n        console.log(Mes_Rep2);\n    }\n    \n    const buscarFechasBG = () => {  \n        console.log(Mes_Rep1);\n        console.log(Mes_Rep2);\n\n        axios.get(`/recibir_FechasDe_Movimientos/${Mes_Rep1}/${Mes_Rep2}`).then(resp => {\n            const datos = resp.data;\n            console.log(datos); \n            if (datos.length == 0) {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'ERROR:',\n                    text: 'No existen registros en la DB con la fecha especificada :('\n                })\n            }  \n            for (let i=0; i< datos.length; i++) {\n                console.log(datos[i][\"Fecha\"]);\n            }     \n        });        \n    };\n\n    const openInNewTab = url => {\n        window.open(url, '_blank', 'noopener,noreferrer');\n      };\n\n    return(\n        <div className=\"container micontenedor\">\n            <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n            <script src=\"https://parall.ax/parallax/js/jspdf.js\"></script>\n\n            <h1>Dashboard</h1>\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n\n                    {/*Columna izquierda o Registro de archivos*/}\n                \n                    <div className=\"col-md-5 col-sm-6 leftcol align-items-center\">\n                        <h1 className=\"text-center\"> Registro de Archivos</h1>\n                        <div className=\"col-md-auto\">\n\n                            <div class=\"col-container\"></div>\n                            \n                            <form action={`/subirMovimientos/${userEmail}/${userContraseña}`} method=\"POST\" enctype=\"multipart/form-data\"> \n                                <div className=\"form-group\">\n                                    <label for=\"excel\">Movimientos Auxiliares del Catálogo</label>\n                                    <input id=\"excel-file\" accept=\".xlsx\" type=\"file\" className=\"form-control\" name=\"excel\" onChange={onFileChange} required></input>\n                                    <div className=\"col-md-auto align-items-center text-center\">\n                                        \n                                        <button className=\"btn btn-dark btn-lg btn-costum-size\" type=\"submit\" onClick={alertaPOST}>\n                                            Subir Excel (Movimientos Auxiliares del Catálogo) </button>\n                                    </div>\n                                </div>\n                            </form>\n\n                            <div class=\"col-container\"></div>\n\n                            <form action={`/subirCatalogo/${userEmail}/${userContraseña}`} method=\"POST\" encType=\"multipart/form-data\">\n                                <div className=\"form-group\">\n                                    <label for=\"excel\">Catálogo de Cuentas</label>\n                                    <input id=\"excel-file-Cat\" accept=\".xlsx\" type=\"file\" className=\"form-control\" name=\"excel\" onChange={onFileChange_Cat} required></input>\n                                    <div className=\"col-md-auto align-items-center text-center\">\n                                        <button className=\"btn btn-dark btn-lg btn-costum-size\" type=\"submit\" onClick={alertaPOST}>Subir Excel (Catálogo de Cuentas)</button>\n                                    </div>\n                                </div>\n                            </form>\n\n                            <div class=\"col-container\"></div>\n                        </div>\n                    </div>\n\n                    <div class=\"w-100 d-xl-none\"></div>\n\n                    {/*Columna derecha o Generacion de reportes*/}\n                    <div className=\"col-md-5 col-sm-6 rightcol align-items-center\">\n                        <div className=\"col-md-auto align-items-center\">\n                            <h1 className=\"text-center\"> Generacion de Reportes</h1>\n\n                            <div class=\"col-container\"></div>\n\n                            <div class=\"col-container\"></div>\n\n                            <div className=\"modal-footer\">\n                                <button className=\"btn btn-light\" onClick={() => openInNewTab('/descargarPDF_BG')}>Descarga tu PDF \"Balance General\"</button>\n                            </div>\n\n                            <div className=\"modal-footer\">\n                                <button className=\"btn btn-light\" onClick={() => openInNewTab('/descargarPDF_ER')}>Descarga tu PDF \"Estado de Resultados\"</button>\n                            </div>\n\n                            <div className=\"modal-footer\">\n                                <button className=\"btn btn-light\" onClick={() => openInNewTab('/descargarPDF_BC')}>Descarga tu PDF \"Balance de Comprobación\"</button>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>        \n    );\n}\n\nexport default Dashboard;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/PDF_BalanceG.jsx",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Helmet } from 'react-helmet';\nimport Select from 'react-select';\nimport swal from 'sweetalert';\nimport Pdf from \"react-to-pdf\";\n\nconst reference1 = React.createRef();\n\nconst Swal = require('sweetalert2');\n\nfunction DescargarPDF_BG( {userEmail, userContraseña} ){\n\n    const [reportGenerated, setReportGenerated] = useState(false);\n    const [cuentasBG, setCuentasBG] = useState({});\n    const [totales, setTotales] = useState([0,0,0,0,0,0,0,0]);\n\n    var Mes_Rep1 = \"ene\";\n    var Mes_Rep2 = \"dic\";\n\n    const meses = [\n        { label: 'Enero',       value: 'ene' },\n        { label: 'Febrero',     value: 'feb'},\n        { label: 'Marzo',       value: 'mar' },\n        { label: 'Abril',       value: 'abr' },\n        { label: 'Mayo',        value: 'may ' },\n        { label: 'Junio',       value: 'jun' },\n        { label: 'Julio',       value: 'jul' },\n        { label: 'Agosto',      value: 'ago' },\n        { label: 'Septiembre',  value: 'sep'},\n        { label: 'Octubre',     value: 'oct' },\n        { label: 'Noviembre',   value: 'nov'},\n        { label: 'Diciembre',   value: 'dic'}\n    ]\n\n    const handleSelect_Mes_Rep1 = (event) => {\n        Mes_Rep1 = event.value;\n        console.log(Mes_Rep1);\n    }\n\n    const handleSelect_Mes_Rep2 = (event) => {\n        Mes_Rep2 = event.value;\n        console.log(Mes_Rep2);\n    }\n\n    var cuentas = {};\n    var limitesBG = {\n        \"ActivoCiculante\": [100, 119],\n        \"ActivoFijo\": [120, 139],\n        \"ActivoDiferido\": [140,199],\n        \"PasivoCirculante\": [200, 219],\n        \"PasivoFijo\": [220,229],\n        \"PasivoDiferido\": [230, 399],\n        \"Ingresos\": [400, 499],\n    }\n    var activoCirculante = [];\n    //\"Bancos\", \"Clientes\", \"Deudores Diversos\", \"IVA Acreditable\"\n    var activoFijo = [];\n    //\"Mobiliario y Equipo de oficina\", \"Depreciación Acumulada de Mob y Eq. oficina\"\n    var activoDiferido = [];\n    //\"Impuestos Anticipados\"\n    var pasivoCirculante = [];\n    //\"ACREEDORES DIVERSOS\", \"IMPUESTOS POR PAGAR\", \"DOCUMENTOS POR PAGAR\"\n    var pasivoFijo = [];\n    var pasivoDiferido = [];\n    var capital = [];\n    var ingresos = [];\n    var egresos = [];\n    //\"Capital Social\", \"Resultado Ejercicios Anteriores\"\n\n    const llenarTablaRBG = (tablaID, categoria, textoTotal, indice) => {\n        var ACTable = document.getElementById(tablaID);\n                for (let i = 0; i < categoria.length; i++) {\n                    console.log(\"añadiendo fila: \", categoria[i]);\n                    if (cuentasBG[categoria[i]] != null && cuentasBG[categoria[i]] != 0) {\n                        var row = ACTable.insertRow(ACTable.rows.length);\n                        var cell0 = row.insertCell(0);\n                        cell0.innerHTML = categoria[i];\n\n                        var cell1 = row.insertCell(1);\n                        var element = document.createElement(\"p\");\n                        //element.className = \"cantidad\";\n                        element.innerHTML = cuentasBG[categoria[i]];\n                        cell1.appendChild(element);\n\n                    }\n                }\n                var row = ACTable.insertRow(ACTable.rows.length);\n                var cell0 = row.insertCell(0);\n\n                var cell1 = row.insertCell(1);\n                var element = document.createElement(\"hr\");\n                cell1.appendChild(element);\n\n                row = ACTable.insertRow(ACTable.rows.length);\n                cell0 = row.insertCell(0);\n                element = document.createElement(\"p\");\n                element.innerHTML = textoTotal;\n                cell0.appendChild(element);\n\n                cell1 = row.insertCell(1);\n                element = document.createElement(\"p\");\n                element.innerHTML = totales[indice];\n                cell1.appendChild(element);\n    }\n    const sumarTotal = (tablaID, textoTotal) => {\n        console.log(\"probando con tabla: \", tablaID);\n        console.log(\"totales de:\", totales);\n        var tablaSuma = document.getElementById(tablaID);\n        var row = tablaSuma.insertRow(tablaSuma.rows.length);\n        var cell0 = row.insertCell(0);\n        var cell1 = row.insertCell(1);\n        var element = document.createElement(\"hr\");\n        cell1.appendChild(element);\n\n        if (textoTotal == \"SUMA DEL ACTIVO\") {\n            row = tablaSuma.insertRow(tablaSuma.rows.length)\n            cell0 = row.insertCell(0);\n            element = document.createElement(\"p\");\n            element.innerHTML = textoTotal;\n            cell0.appendChild(element);\n\n            cell1 = row.insertCell(1);\n            element = document.createElement(\"p\");\n            element.innerHTML = (totales[0] + totales[1] + totales [2]).toFixed(2);\n            cell1.appendChild(element);\n        } else if (textoTotal == \"SUMA DEL PASIVO\") {\n            row = tablaSuma.insertRow(tablaSuma.rows.length)\n            cell0 = row.insertCell(0);\n            element = document.createElement(\"p\");\n            element.innerHTML = textoTotal;\n            cell0.appendChild(element);\n\n            cell1 = row.insertCell(1);\n            element = document.createElement(\"p\");\n            element.innerHTML = (totales[3] + totales[4] + totales [5]).toFixed(2);\n            cell1.appendChild(element);\n        } else if (textoTotal == \"SUMA DEL CAPITAL\") {\n            row = tablaSuma.insertRow(tablaSuma.rows.length)\n            cell0 = row.insertCell(0);\n            element = document.createElement(\"p\");\n            element.innerHTML = textoTotal;\n            cell0.appendChild(element);\n\n            cell1 = row.insertCell(1);\n            element = document.createElement(\"p\");\n            element.innerHTML = (totales[6] + totales[7]).toFixed(2);\n            cell1.appendChild(element);\n        } else {\n            row = tablaSuma.insertRow(tablaSuma.rows.length)\n            cell0 = row.insertCell(0);\n            element = document.createElement(\"p\");\n            element.innerHTML = textoTotal;\n            cell0.appendChild(element);\n\n            cell1 = row.insertCell(1);\n            element = document.createElement(\"p\");\n            element.innerHTML = (totales[3] + totales[4] + totales[5] + totales[6] + totales[7]).toFixed(2);\n            cell1.appendChild(element);\n        }\n    }\n\n    const generarReporteBG = () => {\n        console.log(userEmail, \" : \", userContraseña);\n        console.log(Mes_Rep1);\n        console.log(Mes_Rep2);\n\n        axios.get(`/recibir_FechasDe_Movimientos/${Mes_Rep1}/${Mes_Rep2}/${userEmail}/${userContraseña}`).then(resp => {\n            const datos = resp.data;\n            console.log(datos); \n            if (datos.length == 0) {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'ERROR:',\n                    text: 'No existen registros en la DB con la fecha especificada :('\n                })\n            }  \n                \n            console.log(\"checando datos...\");\n            for (let i = 0; i < datos.length; i++) {\n                console.log(datos[i]);\n                if (datos[i][\"Categoria_Total\"] != \"Movimiento de Cuenta Común\" &&\n                    (datos[i][\"Total_Cargos\"] || datos[i][\"Total_Abonos\"] || datos[i][\"Total_Saldo\"]) ) {\n                        if (cuentasBG[datos[i][\"Categoria_Total\"]] == null) {\n                            if(datos[i][\"Categoria_Total\"].substring(0,12) == \"Depreciación\") {\n                                setCuentasBG(cuentasBG[datos[i][\"Categoria_Total\"]] = -1*datos[i][\"Total_Saldo\"]);\n                            } else {\n                                setCuentasBG(cuentasBG[datos[i][\"Categoria_Total\"]] = datos[i][\"Total_Saldo\"]);\n                            }\n                        } else {\n                            if(datos[i][\"Categoria_Total\"].substring(0,12) == \"Depreciación\") {\n                                setCuentasBG(cuentasBG[datos[i][\"Categoria_Total\"]] += -1*datos[i][\"Total_Saldo\"]);\n                            } else {\n                                setCuentasBG(cuentasBG[datos[i][\"Categoria_Total\"]] += datos[i][\"Total_Saldo\"]);\n                            }\n                        }\n                    let codigo = parseInt(datos[i][\"Cuenta\"].substring(0,3));\n                    console.log(codigo);\n                    if (codigo >= limitesBG[\"ActivoCiculante\"][0] && codigo <= limitesBG[\"ActivoCiculante\"][1]) {\n                        if (!activoCirculante.includes(datos[i][\"Categoria_Total\"])) {\n                            activoCirculante.push(datos[i][\"Categoria_Total\"]);\n                        } \n                    } else if (codigo >= limitesBG[\"ActivoFijo\"][0] && codigo <= limitesBG[\"ActivoFijo\"][1]) {\n                        if (!activoFijo.includes(datos[i][\"Categoria_Total\"])){\n                            activoFijo.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    } else if (codigo >= limitesBG[\"ActivoDiferido\"][0] && codigo <= limitesBG[\"ActivoDiferido\"][1]) {\n                        if (!activoDiferido.includes(datos[i][\"Categoria_Total\"])) {\n                            activoDiferido.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    } else if (codigo >= limitesBG[\"PasivoCirculante\"][0] && codigo <= limitesBG[\"PasivoCirculante\"][1]) {\n                        if (!pasivoCirculante.includes(datos[i][\"Categoria_Total\"])) {\n                            pasivoCirculante.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    } else if (codigo >= limitesBG[\"PasivoFijo\"][0] && codigo <= limitesBG[\"PasivoFijo\"][1]) {\n                        if (!pasivoFijo.includes(datos[i][\"Categoria_Total\"])) {\n                            pasivoFijo.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    } else if (codigo >= limitesBG[\"PasivoDiferido\"][0] && codigo <= limitesBG[\"PasivoDiferido\"][1]) {\n                        if (!pasivoDiferido.includes(datos[i][\"Categoria_Total\"])) {\n                            pasivoDiferido.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    } else if (codigo < 100) {\n                        if (!capital.includes(datos[i][\"Categoria_Total\"])) {\n                            capital.push(datos[i][\"Categoria_Total\"]);\n                        }      \n                    } else if (codigo >= limitesBG[\"Ingresos\"][0] && codigo <= limitesBG[\"Ingresos\"][1]) {\n                        if (!ingresos.includes(datos[i][\"Categoria_Total\"])) {\n                            ingresos.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    } else if (codigo >= 500) {\n                        if (!egresos.includes(datos[i][\"Categoria_Total\"])) {\n                            egresos.push(datos[i][\"Categoria_Total\"]);\n                        }\n                    }\n                }\n            }\n            console.log(\"datos checados\");\n            for (const activoC of activoCirculante) {\n                setTotales(totales[0] += cuentasBG[activoC]);\n            }\n            for (const activoF of activoFijo) {\n                setTotales(totales[1] += cuentasBG[activoF]);\n            }\n            for (const activoD of activoDiferido) {\n                setTotales(totales[2] += cuentasBG[activoD]);\n            }\n            for (const pasivoC of pasivoCirculante) {\n                setTotales(totales[3] += cuentasBG[pasivoC]);\n            }\n            for (const pasivoF of pasivoFijo) {\n                setTotales(totales[4] += cuentasBG[pasivoF]);\n            }\n            for (const pasivoD of pasivoDiferido) {\n                setTotales(totales[5] += cuentasBG[pasivoD]);\n            }\n            for (const c of capital) {\n                setTotales(totales[6] += cuentasBG[c]);\n            }\n            for (const i of ingresos) {\n                setTotales(totales[7] += cuentasBG[i]);\n            }\n            for (const e of egresos) {\n                setTotales(totales[7] -= cuentasBG[e]);\n            }\n\n            console.log(cuentasBG);\n            console.log(totales);\n            setCuentasBG(cuentas);\n            console.log(activoCirculante);\n            console.log(capital);\n            console.log(ingresos);\n            console.log(egresos);\n            llenarTablaRBG(\"tabla-activos-circulante\", activoCirculante, \"Total CIRCULANTE\", 0);\n            llenarTablaRBG(\"tabla-activos-fijo\", activoFijo, \"Total FIJO\", 1);\n            llenarTablaRBG(\"tabla-activos-diferido\", activoDiferido, \"Total DIFERIDO\", 2);\n            llenarTablaRBG(\"tabla-pasivos-circulante\", pasivoCirculante, \"Total CIRCULANTE\", 3);\n            llenarTablaRBG(\"tabla-pasivos-fijo\", pasivoFijo, \"Total FIJO\", 4);\n            llenarTablaRBG(\"tabla-pasivos-diferido\", pasivoDiferido, \"Total DIFERIDO\", 5);\n            llenarTablaRBG(\"tabla-capital\", capital, \"Total CAPITAL\", 6);\n            sumarTotal(\"tabla-suma-activos\", \"SUMA DEL ACTIVO\");\n            sumarTotal(\"tabla-suma-pasivos\", \"SUMA DEL PASIVO\");\n            sumarTotal(\"tabla-suma-capital\", \"SUMA DEL CAPITAL\");\n            sumarTotal(\"tabla-suma-pc\", \"SUMA DEL PASIVO Y CAPITAL\");\n\n            var tablaC = document.getElementById(\"tabla-capital\");\n            var row = tablaC.insertRow(tablaC.rows.length);\n            var cell0 = row.insertCell(0);\n            var element = document.createElement(\"p\");\n            element.innerHTML = \"Utilidad o Pérdida del Ejercicio\";\n            cell0.appendChild(element);\n\n            var cell1 = row.insertCell(1);\n            element = document.createElement(\"p\");\n            element.innerHTML = totales[7].toFixed(2);\n            cell1.appendChild(element);\n\n            \n            \n            \n            setReportGenerated(current => !current);\n        });\n    };\n\n    const options = {\n        orientation: 'portrait',\n        unit: 'in',\n        format: [40,13]\n    };\n\n    return(\n        <div className=\"container micontenedor\">\n            <Helmet>\n                <title>Descargar Balance General</title>\n            </Helmet>\n            <h1>Tu Balance General </h1>\n            {/* <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.2\"></meta> */}\n                    <div className=\"col-md-auto align-items-center text-center\">\n                    \n                    <h5>¿No es correcto? Pulsa \"Actualizar Balance General\"</h5>\n                    </div>\n                    {/* generarReporteBG() */}\n                    <h4>Mes Inicial: </h4>\n                    <div className=\"col-md-auto\">\n                        <Select name=\"mes1\" required \n                            options = {meses}\n                            onChange = {handleSelect_Mes_Rep1}\n                        />\n                            \n                    </div>\n                    <h4>Mes Final: </h4>\n                    <div className=\"col-md-auto\">\n                        <Select name=\"mes2\" required \n                            options = {meses}\n                            onChange = {handleSelect_Mes_Rep2}\n                        />\n                            \n                    </div>\n        \n                    {/*Boton balance general*/}\n                    <div className=\"col-md-auto align-items-center text-center\">\n                        <a href=\"#myModal\" className=\"btn btn-primary btn-lg btn-costum-size\" role=\"button\" onClick={() => generarReporteBG()}>Actualizar Balance General</a>\n\n                        {/*\n                        Modalidad balance general generada al presionar el boton\n                        */}\n\n                        <div id=\"reference1\" ref={reference1} className=\"responsive-font\">\n                            <div id=\"myModal\" className=\" \" content=\"width=device-width, initial-scale=0.2\">\n                                <div className=\"modal-dialog modal-xl\" role=\"document\">\n                                    <div className=\"modal-content\">\n                                        <div className=\"modal-header\">\n                                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Balance General</h5>\n                                            \n                                            <Pdf targetRef={reference1} filename=\"Balance General.pdf\" options={options} x={1} y={1} scale={1}>\n                                                {({ toPdf }) => <button className=\"btn btn-primary\" onClick={toPdf}>Descargar PDF \"Balance General\"<i class=\"far fa-file-pdf ml-1 text-white\"></i></button>}\n                                            </Pdf>\n                                        \n                                            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">HOLA</button> */}\n                                        </div>\n                                        <div className=\"modal-body\">\n                                            <h1> Empresa 1</h1>\n                                            <section className =\"flex-container\">\n                                                \n                                                <div className=\"activos\">\n                                                    <h1 className=\"titulo-seccion\"> Activos </h1>\n                                                    <h2 className=\"subtitulo-seccion\"> CIRCULANTE</h2>\n                                                    <table id=\"tabla-activos-circulante\">\n                                                        \n                                                    </table>\n                                                    <h2 className=\"subtitulo-seccion\"> FIJO</h2>\n                                                    <table id=\"tabla-activos-fijo\">\n                                                        \n                                                    </table>\n                                                    <h2 className=\"subtitulo-seccion\"> DIFERIDO</h2>\n                                                    <table id=\"tabla-activos-diferido\">\n                                                    \n                                                    </table>\n                                                    \n                                                </div>\n                                                <div className=\"pasivos-capital\">\n                                                    <div className=\"pasivos\">\n                                                        <h1 className=\"titulo-seccion\"> Pasivos</h1>\n                                                        <h2 className=\"subtitulo-seccion\">CIRCULANTE</h2>\n                                                        <table id=\"tabla-pasivos-circulante\">\n                                                            \n                                                        </table>\n                                                        <h2 className=\"subtitulo-seccion\"> FIJO</h2>\n                                                        <table id=\"tabla-pasivos-fijo\">\n                                                            \n                                                        </table>\n                                                        <h2 className=\"subtitulo-seccion\"> DIFERIDO</h2>\n                                                        <table id=\"tabla-pasivos-diferido\">\n                                                            \n                                                        </table>\n                                                        <table id=\"tabla-suma-pasivos\">\n\n                                                        </table>\n                                                    </div>\n                                                    <div className=\"capital\">\n                                                        <h1 className=\"titulo-seccion\">Capital</h1>\n                                                        <h2 className=\"subtitulo-seccion\"> CAPITAL </h2>\n                                                        <table id=\"tabla-capital\">\n                                                        \n                                                        </table>\n\n                                                        <table id=\"tabla-suma-capital\">\n\n                                                        </table>\n                                                        \n                                                \n                                                    </div>\n                                                </div>\n                                            </section>\n                                            <section className=\"flex-container\">\n                                                <div className=\"sumas\">\n                                                    <table id=\"tabla-suma-activos\">\n                                                        \n                                                    </table>\n                                                </div>\n                                                <div className=\"sumas\">\n                                                    <table id=\"tabla-suma-pc\">\n                                                        \n                                                    </table>\n                                                </div>\n                                            </section>\n                                        </div>\n                                        {/*\n                                        <div className=\"modal-footer\">\n                                            <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\">OK</button>\n                                        </div>\n                                        */}\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ div>\n        </div>\n    );\n}\n\nexport default DescargarPDF_BG;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/Registro.jsx",[],[],"/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/Paginas/PDF_BalanceDeC.jsx",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Helmet } from 'react-helmet';\nimport Select from 'react-select';\nimport swal from 'sweetalert';\nimport Pdf from \"react-to-pdf\";\n\nconst reference3 = React.createRef();\n\nconst Swal = require('sweetalert2');\n\nfunction DescargarPDF_BC( {userEmail, userContraseña} ){\n\n    var Mes_Rep1 = \"ene\";\n    var Mes_Rep2 = \"dic\";\n\n    const meses = [\n        { label: 'Enero',       value: 'ene' },\n        { label: 'Febrero',     value: 'feb'},\n        { label: 'Marzo',       value: 'mar' },\n        { label: 'Abril',       value: 'abr' },\n        { label: 'Mayo',        value: 'may ' },\n        { label: 'Junio',       value: 'jun' },\n        { label: 'Julio',       value: 'jul' },\n        { label: 'Agosto',      value: 'ago' },\n        { label: 'Septiembre',  value: 'sep'},\n        { label: 'Octubre',     value: 'oct' },\n        { label: 'Noviembre',   value: 'nov'},\n        { label: 'Diciembre',   value: 'dic'}\n    ]\n\n    const handleSelect_Mes_Rep1 = (event) => {\n        Mes_Rep1 = event.value;\n        console.log(Mes_Rep1);\n    }\n\n    const handleSelect_Mes_Rep2 = (event) => {\n        Mes_Rep2 = event.value;\n        console.log(Mes_Rep2);\n    }\n\n    //Estado BC\n    const [cuentasBC, setCuentasBC] = useState({});\n\n    const generarReporteBC = () => {\n        var diccionarioCN = {};\n        var categoriasEspeciales = {\n            \"000-0110\": [], //Activo Circulante\n            \"000-0120\": [], //Activo Fijo\n            \"000-0140\": [], //Activo Diferido\n            \"000-0210\": [], //Pasivo Circulante\n            \"000-0220\": [], //Pasivo Fijo\n            \"000-0230\": [], //Pasivo Diferido\n        };\n        var categoriasGrandes = {\n            \"000-0100\": [\"000-0110\", \"000-0120\", \"000-0140\"], //Activos\n            \"000-0200\": [\"000-0210\", \"000-0220\", \"000-0230\"], //Pasivos\n            \"000-0300\": [], //Capital\n            \"000-0400\": [], //Resultados Acreedoras\n            \"000-0500\": [] //Resultados Deudoras\n        };\n        var subs = {}\n\n        axios.all([\n            axios.get(`/recibirCuentas/${userEmail}/${userContraseña}`), \n            axios.get(`/recibir_FechasDe_Movimientos/${Mes_Rep1}/${Mes_Rep2}/${userEmail}/${userContraseña}`)\n          ])\n          .then(axios.spread((resp1, resp2) => {\n            var catalogoCuentas = resp1.data;\n            var movimientos = resp2.data;\n            var pendientes = [];\n            var orden = [];\n\n            //Revisar el catálogo y empezar con asignación en 0s\n            for (let i = 0; i < catalogoCuentas.length; i++) {\n                setCuentasBC(cuentasBC[catalogoCuentas[i][\"Codigo\"]] = [0,0,0,0]);\n                diccionarioCN[catalogoCuentas[i][\"Codigo\"]] = catalogoCuentas[i][\"Nombre\"];\n                diccionarioCN[catalogoCuentas[i][\"Nombre\"]] = catalogoCuentas[i][\"Codigo\"];\n                let codigo = catalogoCuentas[i][\"Codigo\"];\n                let prefijo = parseInt(codigo.substring(0,3));\n                if (codigo.substring(0,6) == \"000-03\") {\n                    categoriasGrandes[\"000-0300\"].push(codigo);\n                } else if (codigo.substring(4,8) == \"0000\") {\n                    subs[codigo] = [];\n                    if (prefijo < 400) {\n                        if (prefijo >= 100 && prefijo < 119) {\n                            categoriasEspeciales[\"000-0110\"].push(codigo);\n                        } else if (prefijo >= 120 && prefijo < 140) {\n                            categoriasEspeciales[\"000-0120\"].push(codigo);\n                        } else if (prefijo >= 140 && prefijo < 199) {\n                            categoriasEspeciales[\"000-0140\"].push(codigo);\n                        } else if (prefijo >= 200 && prefijo < 219) {\n                            categoriasEspeciales[\"000-0210\"].push(codigo);\n                        } else if (prefijo >= 220 && prefijo < 230) {\n                            categoriasEspeciales[\"000-0220\"].push(codigo);\n                        } else {\n                            categoriasEspeciales[\"000-0230\"].push(codigo);\n                        }\n                    } else {\n                        if (prefijo < 500) {\n                            categoriasGrandes[\"000-0400\"].push(codigo);\n                        } else {\n                            categoriasGrandes[\"000-0500\"].push(codigo);\n                        }\n                    }\n                } else if (prefijo != 0) {\n                    let subCodigo = toString(prefijo).concat(\"-0000\");\n                    if (subs[subCodigo] == null) {\n                        pendientes.push(codigo);\n                    } else {\n                        subs[subCodigo].push(codigo);\n                    }\n                }\n            }\n\n            //Añadir pendientes\n            for (let i = 0; i < pendientes.length; i++) {\n                let subCodigo = pendientes[i].substring(0,3).concat(\"-0000\");\n                subs[subCodigo].push(pendientes[i]);\n            } \n\n            //Revisar movimientos y asignar valores para la tabla\n            for (let i = 0; i < movimientos.length; i++) {\n                if (movimientos[i][\"Categoria_Total\"] != null) {\n                    let sInicial;\n                    if ((parseInt(movimientos[i][\"Cuenta\"].substring(0,3)) >= 200 && parseInt(movimientos[i][\"Cuenta\"].substring(0,3)) < 300) ||\n                        (parseInt(movimientos[i][\"Cuenta\"].substring(0,3)) >= 400 && parseInt(movimientos[i][\"Cuenta\"].substring(0,3)) < 500)) {\n                        sInicial = movimientos[i][\"Total_Saldo\"] + movimientos[i][\"Total_Cargos\"] - movimientos[i][\"Total_Abonos\"];\n                    } else {\n                        sInicial = movimientos[i][\"Total_Saldo\"] + movimientos[i][\"Total_Abonos\"] - movimientos[i][\"Total_Cargos\"];\n                    }\n                    if(movimientos[i][\"Categoria_Total\"] == \"Movimiento de Cuenta Común\") {\n                        var currObj = cuentasBC[movimientos[i][\"Cuenta\"]];\n                        currObj[0] += sInicial;\n                        currObj[1] += movimientos[i][\"Total_Cargos\"];\n                        currObj[2] += movimientos[i][\"Total_Abonos\"];\n                        currObj[3] += movimientos[i][\"Total_Saldo\"];\n                        setCuentasBC(cuentasBC[movimientos[i][\"Cuenta\"]] = currObj);\n                    } else {\n                        var codigo = \"\";\n                        if (movimientos[i][\"Cuenta\"] != diccionarioCN[movimientos[i][\"Categoria_Total\"]] && diccionarioCN[movimientos[i][\"Categoria_Total\"]] != null) {\n                            codigo = diccionarioCN[movimientos[i][\"Categoria_Total\"]];\n                        } else if (diccionarioCN[movimientos[i][\"Categoria_Total\"]] == null) {\n                            codigo = movimientos[i][\"Cuenta\"];\n                            diccionarioCN[movimientos[i][\"Categoria_Total\"]] = codigo;\n                            diccionarioCN[codigo] = movimientos[i][\"Categoria_Total\"];\n                        } else {\n                            codigo = movimientos[i][\"Cuenta\"];\n                        }\n                        var currObj = cuentasBC[movimientos[i][\"Cuenta\"]];\n                        currObj[0] += sInicial;\n                        currObj[1] += movimientos[i][\"Total_Cargos\"];\n                        currObj[2] += movimientos[i][\"Total_Abonos\"];\n                        currObj[3] += movimientos[i][\"Total_Saldo\"];\n                        setCuentasBC(cuentasBC[codigo] = currObj);\n                        \n                    }\n                }\n            }\n\n            //Sumar activos circulantes\n            for (let i = 0; i < categoriasEspeciales[\"000-0110\"].length; i++) {\n                let currObj = cuentasBC[\"000-0110\"];\n                currObj[0] += cuentasBC[categoriasEspeciales[\"000-0110\"][i]][0];\n                currObj[1] += cuentasBC[categoriasEspeciales[\"000-0110\"][i]][1];\n                currObj[2] += cuentasBC[categoriasEspeciales[\"000-0110\"][i]][2];\n                currObj[3] += cuentasBC[categoriasEspeciales[\"000-0110\"][i]][3];\n                setCuentasBC(cuentasBC[\"000-0110\"] = currObj);\n            }\n            console.log(cuentasBC[\"000-0110\"]);\n\n            \n            //Sumar activos fijos\n            for (let i = 0; i < categoriasEspeciales[\"000-0120\"].length; i++) {\n                let currObj = cuentasBC[\"000-0120\"];\n                if (diccionarioCN[categoriasEspeciales[\"000-0120\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasEspeciales[\"000-0120\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasEspeciales[\"000-0120\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasEspeciales[\"000-0120\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasEspeciales[\"000-0120\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0120\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasEspeciales[\"000-0120\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasEspeciales[\"000-0120\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasEspeciales[\"000-0120\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasEspeciales[\"000-0120\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0120\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0120\"]);\n\n            //Sumar activos diferidos\n            for (let i = 0; i < categoriasEspeciales[\"000-0140\"].length; i++) {\n                let currObj = cuentasBC[\"000-0140\"];\n                if (diccionarioCN[categoriasEspeciales[\"000-0140\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasEspeciales[\"000-0140\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasEspeciales[\"000-0140\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasEspeciales[\"000-0140\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasEspeciales[\"000-0140\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0140\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasEspeciales[\"000-0140\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasEspeciales[\"000-0140\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasEspeciales[\"000-0140\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasEspeciales[\"000-0140\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0140\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0140\"]);\n\n            //Sumar total activos\n            for (let i = 0; i < categoriasGrandes[\"000-0100\"].length; i++) {\n                let currObj = cuentasBC[\"000-0100\"];\n                if (diccionarioCN[categoriasGrandes[\"000-0100\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasGrandes[\"000-0100\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasGrandes[\"000-0100\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasGrandes[\"000-0100\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasGrandes[\"000-0100\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0100\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasGrandes[\"000-0100\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasGrandes[\"000-0100\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasGrandes[\"000-0100\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasGrandes[\"000-0100\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0100\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0100\"]);\n            \n            //Sumar pasivos circulantes\n            for (let i = 0; i < categoriasEspeciales[\"000-0210\"].length; i++) {\n                let currObj = cuentasBC[\"000-0210\"];\n                if (diccionarioCN[categoriasEspeciales[\"000-0210\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasEspeciales[\"000-0210\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasEspeciales[\"000-0210\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasEspeciales[\"000-0210\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasEspeciales[\"000-0210\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0210\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasEspeciales[\"000-0210\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasEspeciales[\"000-0210\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasEspeciales[\"000-0210\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasEspeciales[\"000-0210\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0210\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0210\"]);\n\n            //Sumar pasivos fijos\n            for (let i = 0; i < categoriasEspeciales[\"000-0220\"].length; i++) {\n                let currObj = cuentasBC[\"000-0220\"];\n                if (diccionarioCN[categoriasEspeciales[\"000-0220\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasEspeciales[\"000-0220\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasEspeciales[\"000-0220\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasEspeciales[\"000-0220\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasEspeciales[\"000-0220\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0220\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasEspeciales[\"000-0220\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasEspeciales[\"000-0220\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasEspeciales[\"000-0220\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasEspeciales[\"000-0220\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0220\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0220\"]);\n\n            //Sumar pasivos diferidos\n            for (let i = 0; i < categoriasEspeciales[\"000-0230\"].length; i++) {\n                let currObj = cuentasBC[\"000-0230\"];\n                if (diccionarioCN[categoriasEspeciales[\"000-0230\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasEspeciales[\"000-0230\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasEspeciales[\"000-0230\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasEspeciales[\"000-0230\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasEspeciales[\"000-0230\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0230\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasEspeciales[\"000-0230\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasEspeciales[\"000-0230\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasEspeciales[\"000-0230\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasEspeciales[\"000-0230\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0230\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0230\"]);\n\n            //Sumar total pasivos\n            for (let i = 0; i < categoriasGrandes[\"000-0200\"].length; i++) {\n                let currObj = cuentasBC[\"000-0200\"];\n                if (diccionarioCN[categoriasGrandes[\"000-0200\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasGrandes[\"000-0200\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasGrandes[\"000-0200\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasGrandes[\"000-0200\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasGrandes[\"000-0200\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0200\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasGrandes[\"000-0200\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasGrandes[\"000-0200\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasGrandes[\"000-0200\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasGrandes[\"000-0200\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0200\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0200\"]);\n\n            //Sumar capital\n            for (let i = 0; i < categoriasGrandes[\"000-0300\"].length; i++) {\n                let currObj = cuentasBC[\"000-0300\"];\n                if (diccionarioCN[categoriasGrandes[\"000-0300\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasGrandes[\"000-0300\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasGrandes[\"000-0300\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasGrandes[\"000-0300\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasGrandes[\"000-0300\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0300\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasGrandes[\"000-0300\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasGrandes[\"000-0300\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasGrandes[\"000-0300\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasGrandes[\"000-0300\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0300\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0300\"]);\n\n            //Sumar resultados acreedoras (ingresos)\n            for (let i = 0; i < categoriasGrandes[\"000-0400\"].length; i++) {\n                let currObj = cuentasBC[\"000-0400\"];\n                if (diccionarioCN[categoriasGrandes[\"000-0400\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasGrandes[\"000-0400\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasGrandes[\"000-0400\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasGrandes[\"000-0400\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasGrandes[\"000-0400\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0400\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasGrandes[\"000-0400\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasGrandes[\"000-0400\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasGrandes[\"000-0400\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasGrandes[\"000-0400\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0400\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0400\"]);\n\n            console.log(subs);\n\n            //Sumar resultados deudoras (egresos)\n            for (let i = 0; i < categoriasGrandes[\"000-0500\"].length; i++) {\n                let currObj = cuentasBC[\"000-0500\"];\n                var currSObj = cuentasBC[categoriasGrandes[\"000-0500\"][i]];\n                if (categoriasGrandes[\"000-0500\"][i] != \"502-0000\") {\n                    for ( let j = 0; j<subs[categoriasGrandes[\"000-0500\"][i]].length; j++) {\n                        currSObj[0] += cuentasBC[subs[categoriasGrandes[\"000-0500\"][i]][j]][0];\n                        currSObj[1] += cuentasBC[subs[categoriasGrandes[\"000-0500\"][i]][j]][1];\n                        currSObj[2] += cuentasBC[subs[categoriasGrandes[\"000-0500\"][i]][j]][2];\n                        currSObj[3] += cuentasBC[subs[categoriasGrandes[\"000-0500\"][i]][j]][3];\n                        setCuentasBC(cuentasBC[categoriasGrandes[\"000-0500\"][i]] = currSObj);\n                    }\n                }\n                if (diccionarioCN[categoriasGrandes[\"000-0500\"][i]].substring(0,12) == \"Depreciación\") {\n                    currObj[0] -= cuentasBC[categoriasGrandes[\"000-0500\"][i]][0];\n                    currObj[1] -= cuentasBC[categoriasGrandes[\"000-0500\"][i]][1];\n                    currObj[2] -= cuentasBC[categoriasGrandes[\"000-0500\"][i]][2];\n                    currObj[3] -= cuentasBC[categoriasGrandes[\"000-0500\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0500\"] = currObj);\n                } else {\n                    currObj[0] += cuentasBC[categoriasGrandes[\"000-0500\"][i]][0];\n                    currObj[1] += cuentasBC[categoriasGrandes[\"000-0500\"][i]][1];\n                    currObj[2] += cuentasBC[categoriasGrandes[\"000-0500\"][i]][2];\n                    currObj[3] += cuentasBC[categoriasGrandes[\"000-0500\"][i]][3];\n                    setCuentasBC(cuentasBC[\"000-0500\"] = currObj);\n                }\n            }\n            console.log(cuentasBC[\"000-0500\"]);\n\n            //Asignar orden de cuentas del reporte:\n            orden.push(\"000-0100\");\n            orden.push(\"000-0110\");\n            categoriasEspeciales[\"000-0110\"].sort();\n            for (let i = 0; i < categoriasEspeciales[\"000-0110\"].length; i++) {\n                orden.push(categoriasEspeciales[\"000-0110\"][i]);\n                subs[categoriasEspeciales[\"000-0110\"][i]].sort();\n                for (let j = 0; j < subs[categoriasEspeciales[\"000-0110\"][i]].length; j++) {\n                    orden.push(subs[categoriasEspeciales[\"000-0110\"][i]][j]);\n                }\n            }\n            orden.push(\"000-0120\");\n            categoriasEspeciales[\"000-0120\"].sort();\n            for (let i = 0; i < categoriasEspeciales[\"000-0120\"].length; i++) {\n                orden.push(categoriasEspeciales[\"000-0120\"][i]);\n                subs[categoriasEspeciales[\"000-0120\"][i]].sort();\n                for (let j = 0; j < subs[categoriasEspeciales[\"000-0120\"][i]].length; j++) {\n                    orden.push(subs[categoriasEspeciales[\"000-0120\"][i]][j]);\n                }\n            }\n            orden.push(\"000-0140\");\n            categoriasEspeciales[\"000-0140\"].sort();\n            for (let i = 0; i < categoriasEspeciales[\"000-0140\"].length; i++) {\n                orden.push(categoriasEspeciales[\"000-0140\"][i]);\n                subs[categoriasEspeciales[\"000-0140\"][i]].sort();\n                for (let j = 0; j < subs[categoriasEspeciales[\"000-0140\"][i]].length; j++) {\n                    orden.push(subs[categoriasEspeciales[\"000-0140\"][i]][j]);\n                }\n            }\n            orden.push(\"000-0200\");\n            categoriasEspeciales[\"000-0210\"].sort();\n            for (let i = 0; i < categoriasEspeciales[\"000-0210\"].length; i++) {\n                orden.push(categoriasEspeciales[\"000-0210\"][i]);\n                subs[categoriasEspeciales[\"000-0210\"][i]].sort();\n                for (let j = 0; j < subs[categoriasEspeciales[\"000-0210\"][i]].length; j++) {\n                    orden.push(subs[categoriasEspeciales[\"000-0210\"][i]][j]);\n                }\n            }\n            categoriasEspeciales[\"000-0220\"].sort();\n            for (let i = 0; i < categoriasEspeciales[\"000-0220\"].length; i++) {\n                orden.push(categoriasEspeciales[\"000-0220\"][i]);\n                subs[categoriasEspeciales[\"000-0220\"][i]].sort();\n                for (let j = 0; j < subs[categoriasEspeciales[\"000-0220\"][i]].length; j++) {\n                    orden.push(subs[categoriasEspeciales[\"000-0220\"][i]][j]);\n                }\n            }\n            categoriasEspeciales[\"000-0230\"].sort();\n            for (let i = 0; i < categoriasEspeciales[\"000-0230\"].length; i++) {\n                orden.push(categoriasEspeciales[\"000-0230\"][i]);\n                subs[categoriasEspeciales[\"000-0230\"][i]].sort();\n                for (let j = 0; j < subs[categoriasEspeciales[\"000-0230\"][i]].length; j++) {\n                    orden.push(subs[categoriasEspeciales[\"000-0230\"][i]][j]);\n                }\n            }\n            orden.push(\"000-0300\");\n            categoriasGrandes[\"000-0300\"].sort();\n            for (let i = 0; i < categoriasGrandes[\"000-0300\"].length; i++) {\n                orden.push(categoriasGrandes[\"000-0300\"][i]);\n            }\n            orden.push(\"000-0400\");\n            categoriasGrandes[\"000-0400\"].sort();\n            for (let i = 0; i < categoriasGrandes[\"000-0400\"].length; i++) {\n                orden.push(categoriasGrandes[\"000-0400\"][i]);\n                subs[categoriasGrandes[\"000-0400\"][i]].sort();\n                for (let j = 0; j < subs[categoriasGrandes[\"000-0400\"][i]].length; j++) {\n                    orden.push(subs[categoriasGrandes[\"000-0400\"][i]][j]);\n                }\n            }\n            orden.push(\"000-0500\");\n            categoriasGrandes[\"000-0500\"].sort();\n            for (let i = 0; i < categoriasGrandes[\"000-0500\"].length; i++) {\n                orden.push(categoriasGrandes[\"000-0500\"][i]);\n                subs[categoriasGrandes[\"000-0500\"][i]].sort();\n                for (let j = 0; j < subs[categoriasGrandes[\"000-0500\"][i]].length; j++) {\n                    orden.push(subs[categoriasGrandes[\"000-0500\"][i]][j]);\n                }\n            }\n            console.log(orden);\n\n\n            //Añadir HTML en base al orden\n            var BCTable = document.getElementById(\"tablaBC\");\n            for (let i = 0; i<orden.length; i++) {\n                var row = BCTable.insertRow(BCTable.rows.length);\n                var cell0 = row.insertCell(0);\n                var element = document.createElement(\"p\");\n                element.innerHTML = orden[i];\n                cell0.appendChild(element);\n                \n                var cell1 = row.insertCell(1);\n                element = document.createElement(\"p\");\n                element.innerHTML = diccionarioCN[orden[i]];\n                cell1.appendChild(element);\n\n                var cell2 = row.insertCell(2);\n                element = document.createElement(\"p\");\n                element.innerHTML = cuentasBC[orden[i]][0].toFixed(2);\n                cell2.appendChild(element);\n\n                var Acell3 = row.insertCell(3);\n                element = document.createElement(\"p\");\n                element.innerHTML = cuentasBC[orden[i]][1].toFixed(2);\n                Acell3.appendChild(element);\n\n                var cell4 = row.insertCell(4);\n                element = document.createElement(\"p\");\n                element.innerHTML = cuentasBC[orden[i]][2].toFixed(2);\n                cell4.appendChild(element);\n\n                var cell5 = row.insertCell(5);\n                element = document.createElement(\"p\");\n                element.innerHTML = cuentasBC[orden[i]][3].toFixed(2);\n                cell5.appendChild(element);\n            }\n\n          }));\n\n    };\n\n    const options = {\n        orientation: 'portrait',\n        unit: 'in',\n        format: [40,13]\n    };\n\n    return(\n        <div className=\"container micontenedor\">\n            <Helmet>\n                <title>Descargar Balance de Comprobación</title>\n            </Helmet>\n            <h1>Tu Balance de Comprobación </h1>\n                    <div className=\"col-md-auto align-items-center text-center\">\n                    <h5>¿No es correcto? Pulsa \"Actualizar Balance de Comprobación\"</h5>\n                    </div>\n                    {/* generarReporteBC() */}\n                    <h4>Mes Inicial: </h4>\n                    <div className=\"col-md-auto\">\n                        <Select name=\"mes1\" required \n                            options = {meses}\n                            onChange = {handleSelect_Mes_Rep1}\n                        />\n                            \n                    </div>\n                    <h4>Mes Final: </h4>\n                    <div className=\"col-md-auto\">\n                        <Select name=\"mes2\" required \n                            options = {meses}\n                            onChange = {handleSelect_Mes_Rep2}\n                        />\n                            \n                    </div>\n        \n                    {/*Boton Balance de Comprobación*/}\n                    <div className=\"col-md-auto align-items-center text-center\">\n                                \n                                <a href=\"#myModal2\" className=\"btn btn-primary btn-lg btn-costum-size\" role=\"button\" onClick={() => generarReporteBC()}>Actualizar Balance de Comprobación</a>\n                                \n                                {/*\n                                    Modalidad Balance de comprobacion generada al presionar el boton\n                                */}\n                                    \n                                <div id=\"myModal2\" ref={reference3} >\n                                    <div className=\"modal-dialog modal-xl\" role=\"document\">\n                                        <div className=\"modal-content\">\n                                            <div className=\"modal-header\">\n                                                <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Balance de Comprobación</h5>\n                                                \n                                                    <Pdf targetRef={reference3} filename=\"Balance de Comprobacion.pdf\">\n                                                        {({ toPdf }) => <button className=\"btn btn-primary\" onClick={toPdf}>Descargar PDF \"Balance de Comprobación\"</button>}\n                                                    </Pdf>\n                                                \n                                            </div>\n                                            <div className=\"modal-body\">\n                                                <section className =\"flex-container\">\n                                                    <table id=\"tablaBC\" className=\"table-responsive table-borderless\">\n                                                        <thead>\n                                                            <tr>\n                                                            <th scope=\"col\">C&nbsp;u&nbsp;e&nbsp;n&nbsp;t&nbsp;a</th>\n                                                            <th scope=\"col\">N&nbsp;o&nbsp;m&nbsp;b&nbsp;r&nbsp;e</th>\n                                                            <th scope=\"col\">Saldos Iniciales</th>\n                                                            <th scope=\"col\"></th>\n                                                            <th scope=\"col\"></th>\n                                                            <th scope=\"col\">Saldos Actuales</th>\n                                                            </tr>\n                                                            <tr>\n                                                            <th scope=\"col\"></th>\n                                                            <th scope=\"col\"></th>\n                                                            <th scope=\"col\">Deudor Acreedor</th>\n                                                            <th scope=\"col\">Cargos</th>\n                                                            <th scope=\"col\">Abonos</th>\n                                                            <th scope=\"col\">Deudor Acreedor</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            \n                                                        </tbody>\n                                                    </table>\n                                                </section>\n                                            </div>\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n        </div>\n    );\n}\n\nexport default DescargarPDF_BC;","/Users/soteroosuna/Desktop/EafyHeroku/frontend/src/components/useAuth.js",[],[],{"ruleId":"170","severity":1,"message":"171","line":33,"column":8,"nodeType":"172","endLine":33,"endColumn":10,"suggestions":"173"},{"ruleId":"170","severity":1,"message":"171","line":56,"column":8,"nodeType":"172","endLine":56,"endColumn":10,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"179","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"180","line":12,"column":8,"nodeType":"177","messageId":"178","endLine":12,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":20,"column":53,"nodeType":"183","messageId":"184","endLine":21,"endColumn":102},{"ruleId":"181","severity":1,"message":"185","line":22,"column":53,"nodeType":"183","messageId":"184","endLine":23,"endColumn":102},{"ruleId":"181","severity":1,"message":"186","line":24,"column":53,"nodeType":"183","messageId":"184","endLine":25,"endColumn":102},{"ruleId":"175","severity":1,"message":"187","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"188","line":2,"column":16,"nodeType":"177","messageId":"178","endLine":2,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":29,"column":21,"nodeType":"183","endLine":29,"endColumn":54},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"191","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":12},{"ruleId":"175","severity":1,"message":"192","line":10,"column":7,"nodeType":"177","messageId":"178","endLine":10,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":75,"column":135,"nodeType":"195","messageId":"196","endLine":75,"endColumn":137},{"ruleId":"193","severity":1,"message":"197","line":106,"column":102,"nodeType":"195","messageId":"196","endLine":106,"endColumn":104},{"ruleId":"193","severity":1,"message":"197","line":110,"column":50,"nodeType":"195","messageId":"196","endLine":110,"endColumn":52},{"ruleId":"193","severity":1,"message":"194","line":121,"column":94,"nodeType":"195","messageId":"196","endLine":121,"endColumn":96},{"ruleId":"198","severity":1,"message":"199","line":127,"column":29,"nodeType":"177","messageId":"200","endLine":127,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":147,"column":46,"nodeType":"195","messageId":"196","endLine":147,"endColumn":48},{"ruleId":"193","severity":1,"message":"194","line":147,"column":79,"nodeType":"195","messageId":"196","endLine":147,"endColumn":81},{"ruleId":"193","severity":1,"message":"197","line":182,"column":82,"nodeType":"195","messageId":"196","endLine":182,"endColumn":84},{"ruleId":"193","severity":1,"message":"197","line":182,"column":116,"nodeType":"195","messageId":"196","endLine":182,"endColumn":118},{"ruleId":"193","severity":1,"message":"197","line":248,"column":73,"nodeType":"195","messageId":"196","endLine":248,"endColumn":75},{"ruleId":"193","severity":1,"message":"197","line":248,"column":106,"nodeType":"195","messageId":"196","endLine":248,"endColumn":108},{"ruleId":"193","severity":1,"message":"197","line":259,"column":118,"nodeType":"195","messageId":"196","endLine":259,"endColumn":120},{"ruleId":"193","severity":1,"message":"197","line":259,"column":166,"nodeType":"195","messageId":"196","endLine":259,"endColumn":168},{"ruleId":"198","severity":1,"message":"201","line":346,"column":17,"nodeType":"177","messageId":"200","endLine":346,"endColumn":22},{"ruleId":"198","severity":1,"message":"202","line":347,"column":17,"nodeType":"177","messageId":"200","endLine":347,"endColumn":24},{"ruleId":"198","severity":1,"message":"203","line":348,"column":17,"nodeType":"177","messageId":"200","endLine":348,"endColumn":26},{"ruleId":"198","severity":1,"message":"204","line":352,"column":17,"nodeType":"177","messageId":"200","endLine":352,"endColumn":24},{"ruleId":"198","severity":1,"message":"205","line":357,"column":17,"nodeType":"177","messageId":"200","endLine":357,"endColumn":24},{"ruleId":"198","severity":1,"message":"206","line":362,"column":17,"nodeType":"177","messageId":"200","endLine":362,"endColumn":24},{"ruleId":"198","severity":1,"message":"207","line":367,"column":17,"nodeType":"177","messageId":"200","endLine":367,"endColumn":24},{"ruleId":"175","severity":1,"message":"208","line":376,"column":11,"nodeType":"177","messageId":"178","endLine":376,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"179","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"209","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"210","line":13,"column":9,"nodeType":"177","messageId":"178","endLine":13,"endColumn":20},{"ruleId":"175","severity":1,"message":"211","line":14,"column":9,"nodeType":"177","messageId":"178","endLine":14,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":48,"column":19,"nodeType":"195","messageId":"196","endLine":48,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":56,"column":5,"nodeType":"214","messageId":"215","endLine":78,"endColumn":8},{"ruleId":"175","severity":1,"message":"216","line":80,"column":14,"nodeType":"177","messageId":"178","endLine":80,"endColumn":25},{"ruleId":"175","severity":1,"message":"217","line":106,"column":11,"nodeType":"177","messageId":"178","endLine":106,"endColumn":16},{"ruleId":"175","severity":1,"message":"218","line":121,"column":11,"nodeType":"177","messageId":"178","endLine":121,"endColumn":32},{"ruleId":"175","severity":1,"message":"219","line":126,"column":11,"nodeType":"177","messageId":"178","endLine":126,"endColumn":32},{"ruleId":"175","severity":1,"message":"220","line":131,"column":11,"nodeType":"177","messageId":"178","endLine":131,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":138,"column":30,"nodeType":"195","messageId":"196","endLine":138,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"191","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":12},{"ruleId":"175","severity":1,"message":"221","line":14,"column":12,"nodeType":"177","messageId":"178","endLine":14,"endColumn":27},{"ruleId":"193","severity":1,"message":"197","line":75,"column":84,"nodeType":"195","messageId":"196","endLine":75,"endColumn":86},{"ruleId":"198","severity":1,"message":"222","line":88,"column":21,"nodeType":"177","messageId":"200","endLine":88,"endColumn":24},{"ruleId":"198","severity":1,"message":"223","line":89,"column":21,"nodeType":"177","messageId":"200","endLine":89,"endColumn":26},{"ruleId":"198","severity":1,"message":"224","line":91,"column":21,"nodeType":"177","messageId":"200","endLine":91,"endColumn":26},{"ruleId":"198","severity":1,"message":"225","line":92,"column":21,"nodeType":"177","messageId":"200","endLine":92,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":116,"column":24,"nodeType":"195","messageId":"196","endLine":116,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":125,"column":60,"nodeType":"228","messageId":"229","endLine":125,"endColumn":71,"fix":"230"},{"ruleId":"193","severity":1,"message":"194","line":127,"column":31,"nodeType":"195","messageId":"196","endLine":127,"endColumn":33},{"ruleId":"226","severity":1,"message":"231","line":136,"column":60,"nodeType":"228","messageId":"229","endLine":136,"endColumn":71,"fix":"232"},{"ruleId":"193","severity":1,"message":"194","line":138,"column":31,"nodeType":"195","messageId":"196","endLine":138,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":171,"column":30,"nodeType":"195","messageId":"196","endLine":171,"endColumn":32},{"ruleId":"193","severity":1,"message":"197","line":182,"column":49,"nodeType":"195","messageId":"196","endLine":182,"endColumn":51},{"ruleId":"193","severity":1,"message":"194","line":185,"column":76,"nodeType":"195","messageId":"196","endLine":185,"endColumn":78},{"ruleId":"193","severity":1,"message":"194","line":191,"column":76,"nodeType":"195","messageId":"196","endLine":191,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"191","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":12},{"ruleId":"175","severity":1,"message":"192","line":10,"column":7,"nodeType":"177","messageId":"178","endLine":10,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":81,"column":43,"nodeType":"195","messageId":"196","endLine":81,"endColumn":45},{"ruleId":"193","severity":1,"message":"194","line":83,"column":50,"nodeType":"195","messageId":"196","endLine":83,"endColumn":52},{"ruleId":"193","severity":1,"message":"197","line":106,"column":36,"nodeType":"195","messageId":"196","endLine":106,"endColumn":38},{"ruleId":"193","severity":1,"message":"194","line":132,"column":58,"nodeType":"195","messageId":"196","endLine":132,"endColumn":60},{"ruleId":"193","severity":1,"message":"197","line":141,"column":54,"nodeType":"195","messageId":"196","endLine":141,"endColumn":56},{"ruleId":"198","severity":1,"message":"199","line":150,"column":29,"nodeType":"177","messageId":"200","endLine":150,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":176,"column":88,"nodeType":"195","messageId":"196","endLine":176,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":195,"column":88,"nodeType":"195","messageId":"196","endLine":195,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":214,"column":85,"nodeType":"195","messageId":"196","endLine":214,"endColumn":87},{"ruleId":"193","severity":1,"message":"194","line":233,"column":88,"nodeType":"195","messageId":"196","endLine":233,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":252,"column":88,"nodeType":"195","messageId":"196","endLine":252,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":271,"column":88,"nodeType":"195","messageId":"196","endLine":271,"endColumn":90},{"ruleId":"193","severity":1,"message":"194","line":290,"column":85,"nodeType":"195","messageId":"196","endLine":290,"endColumn":87},{"ruleId":"193","severity":1,"message":"194","line":309,"column":85,"nodeType":"195","messageId":"196","endLine":309,"endColumn":87},{"ruleId":"193","severity":1,"message":"194","line":328,"column":85,"nodeType":"195","messageId":"196","endLine":328,"endColumn":87},{"ruleId":"193","severity":1,"message":"197","line":350,"column":54,"nodeType":"195","messageId":"196","endLine":350,"endColumn":56},{"ruleId":"193","severity":1,"message":"194","line":359,"column":85,"nodeType":"195","messageId":"196","endLine":359,"endColumn":87},{"ruleId":"175","severity":1,"message":"208","line":494,"column":11,"nodeType":"177","messageId":"178","endLine":494,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedIn'. Either include it or remove the dependency array.","ArrayExpression",["233"],["234"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'RequireAuth' is defined but never used.","react/jsx-pascal-case","Imported JSX component PDF_BalanceG must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component PDF_EstadoR must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component PDF_BalanceDeC must be in PascalCase or SCREAMING_SNAKE_CASE","'Link' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'swal' is defined but never used.","'Swal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'currObj' is already defined.","redeclared","'TErow' is already defined.","'TEcell0' is already defined.","'TEelement' is already defined.","'TEcell1' is already defined.","'TEcell2' is already defined.","'TEcell3' is already defined.","'TEcell4' is already defined.","'options' is assigned a value but never used.","'Select' is defined but never used.","'prev_result' is assigned a value but never used.","'result' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleClick' is defined but never used.","'meses' is assigned a value but never used.","'handleSelect_Mes_Rep1' is assigned a value but never used.","'handleSelect_Mes_Rep2' is assigned a value but never used.","'buscarFechasBG' is assigned a value but never used.","'reportGenerated' is assigned a value but never used.","'row' is already defined.","'cell0' is already defined.","'cell1' is already defined.","'element' is already defined.","no-whitespace-before-property","Unexpected whitespace before property 2.","MemberExpression","unexpectedWhitespace",{"range":"235","text":"236"},"Unexpected whitespace before property 5.",{"range":"237","text":"236"},{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},[4749,4750],"",[5253,5254],"Update the dependencies array to be: [loggedIn]",{"range":"241","text":"242"},{"range":"243","text":"242"},[1322,1324],"[loggedIn]",[2247,2249]]