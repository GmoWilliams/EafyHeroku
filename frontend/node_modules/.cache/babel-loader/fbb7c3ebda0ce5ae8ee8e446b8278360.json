{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omemw\\\\OneDrive\\\\Documentos\\\\MERN\\\\Heroku\\\\frontend\\\\src\\\\components\\\\Paginas\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [fileName, setFileName] = useState(null);\n\n  const readExcel = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        const bufferArray = e.target.result; // To display selected fileName\n\n        setFileName(file.name);\n        const wb = XLSX.read(bufferArray, {\n          type: 'buffer'\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n    promise.then(d => {\n      console.log(d);\n      setItems(d);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container micontenedor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Seleccionaste: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        const file = e.target.files[0];\n        readExcel(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: d.Item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)]\n        }, d.Item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"mfmYZ6u3puFc8qxPzXdap+noguY=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/omemw/OneDrive/Documentos/MERN/Heroku/frontend/src/components/Paginas/Dashboard.jsx"],"names":["React","useEffect","useState","XLSX","Dashboard","items","setItems","fileName","setFileName","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","name","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","console","log","files","map","Item","Description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as XLSX from 'xlsx';\r\n\r\nfunction Dashboard(){\r\n    const [items, setItems] = useState([]);\r\n    const [fileName, setFileName] = useState(null);\r\n\r\n    const readExcel = (file) => {\r\n        const promise = new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file)\r\n\r\n            fileReader.onload = (e) => {\r\n                const bufferArray = e.target.result;\r\n                \r\n                // To display selected fileName\r\n                setFileName(file.name);\r\n                \r\n                const wb = XLSX.read(bufferArray, {type:'buffer'});\r\n                const wsname = wb.SheetNames[0];\r\n\r\n                const ws = wb.Sheets[wsname];\r\n                const data = XLSX.utils.sheet_to_json(ws);\r\n \r\n                resolve(data);\r\n            };\r\n\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n\r\n        promise.then((d) => {\r\n            console.log(d);\r\n            setItems(d);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container micontenedor\">\r\n                <h1>Dashboard</h1>\r\n                {fileName && (\r\n                    <p>\r\n                        Seleccionaste: <span>{fileName}</span>\r\n                    </p>\r\n                )}\r\n                <input type=\"file\" onChange={(e)=>{\r\n                    const file = e.target.files[0];\r\n                    readExcel(file);\r\n                }}/>\r\n\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Item</th>\r\n                            <th scope=\"col\">Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { items.map((d) => (\r\n                            <tr key={d.Item}>\r\n                                <th>{d.Item}</th>\r\n                                <td>{d.Description}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}